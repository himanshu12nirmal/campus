# Generated by Django 4.1.7 on 2023-05-01 04:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Branch',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=30)),
                ('lecture', models.IntegerField(blank=True, null=True)),
                ('tutorial', models.IntegerField(blank=True, null=True)),
                ('practical', models.IntegerField(blank=True, null=True)),
                ('urlAdd', models.URLField(blank=True, max_length=300, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Div',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('div', models.CharField(blank=True, max_length=2, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'Div',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=100)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='images/faculty/')),
                ('dob', models.DateField()),
                ('age', models.IntegerField()),
                ('password', models.CharField(max_length=25)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'Faculty',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('sem', models.CharField(max_length=1, primary_key=True, serialize=False)),
                ('branch_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'Semester',
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.CharField(max_length=12)),
                ('room', models.CharField(blank=True, max_length=10, null=True)),
                ('Branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.course')),
                ('div', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.div')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.faculty')),
                ('sem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.semester')),
            ],
            options={
                'db_table': 'Timetable',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('enrollment', models.CharField(max_length=14, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=10)),
                ('tfws', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=4)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='images/student/profile/')),
                ('address', models.CharField(max_length=120)),
                ('dob', models.DateField()),
                ('age', models.IntegerField()),
                ('password', models.CharField(max_length=25)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
                ('div', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.div')),
                ('sem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.semester')),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomNo', models.CharField(blank=True, max_length=10, null=True)),
                ('roomType', models.CharField(blank=True, max_length=10, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'Room',
            },
        ),
        migrations.CreateModel(
            name='HOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.branch')),
            ],
            options={
                'db_table': 'HOD',
            },
        ),
        migrations.CreateModel(
            name='Fees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('status', models.BooleanField()),
                ('amount', models.IntegerField()),
                ('enrollment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campus_admin.student')),
            ],
            options={
                'db_table': 'Fees',
            },
        ),
        migrations.AddField(
            model_name='div',
            name='sem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.semester'),
        ),
        migrations.AddField(
            model_name='course',
            name='sem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='campus_admin.semester'),
        ),
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=12)),
                ('is_staff', models.BooleanField(default=True)),
                ('password', models.CharField(max_length=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'NewUser',
            },
        ),
    ]
